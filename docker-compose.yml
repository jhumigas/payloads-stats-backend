version: '2'

services:
  application:
    image: 'payloads-stat-backend:latest'
    build:
      context: .
    container_name: application
    networks:
      - postgres
    depends_on:
      - database
    profiles:
      - backend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/payloads_stats_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
    ports:
      - 8080:8080
  
  pgadmin:
    image: dpage/pgadmin4
    volumes:
       - pg-admin:/root/.pgadmin
    depends_on: 
      - database
    ports:
      - "5050:5050"
    networks:
      - postgres
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=root
      - PGADMIN_LISTEN_PORT=5050
          
  database:
    image: postgres:latest
    restart: always
    container_name: database
    networks:
      - postgres
    environment:
      - POSTGRES_DB=payloads_stats_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - 54032:5432

  zookeeper:
    image: wurstmeister/zookeeper
    expose:
      - "2181"
    ports:
      - "2181:2181"
  
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

volumes:
  db-data:
  pg-admin:
networks:
  postgres:
    driver: bridge